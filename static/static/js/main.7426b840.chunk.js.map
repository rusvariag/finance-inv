{"version":3,"sources":["App.js","index.js"],"names":["App","socketRef","useRef","useState","undefined","status","setStatus","validationSchema","Yup","phoneNumber","required","useEffect","current","socketIOClient","on","message","className","initialValues","onSubmit","values","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","htmlFor","type","id","name","placeholder","ReactDOM","render","document","getElementById"],"mappings":"4OAuFeA,EA3EH,WACV,IAAMC,EAAYC,mBAMlB,EAA4BC,wBAASC,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAMMC,EAAmBC,IAAW,CAClCC,YAAaD,MAEVE,SAAS,cAGdC,qBAAU,WACRV,EAAUW,QAAUC,IAAe,IACnCZ,EAAUW,QAAQE,GAvBJ,aAuBkB,SAAAC,GAC9BT,EAAUS,QAEX,IAoBH,OACE,sBAAKC,UAAU,MAAf,UACE,sDACA,uBAAMA,UAAU,OAAhB,UACE,cAAC,IAAD,CACEC,cA9Cc,CACpBR,YAAa,IA8CPF,iBAAkBA,EAClBW,SAxBgB,SAAAC,GACtBC,MAAM,QAAS,CACbC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KAEpBO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,MAEbG,OAAM,SAAAC,GACLH,QAAQG,MAAM,SAAUA,OAQxB,SAKE,eAAC,IAAD,CAAMjB,UAAU,OAAhB,UACE,uBAAOA,UAAU,QAAQkB,QAAQ,cAAjC,gCAGA,cAAC,IAAD,CACElB,UAAU,cACVmB,KAAK,OACLC,GAAG,cACHC,KAAK,cACLC,YAAY,iBAEd,wBAAQH,KAAK,SAASnB,UAAU,MAAhC,8BAKJ,qBAAKA,UAAU,SAAf,SAAyBQ,KAAKC,UAAUpB,YC7EhDkC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7426b840.chunk.js","sourcesContent":["// import stuff\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport socketIOClient from 'socket.io-client';\n\n// import styles\nimport './styles.css';\n\n// constants\nconst NEW_EVENT = 'newStatus';\n\nconst App = () => {\n  const socketRef = useRef();\n  // initail state for app\n  const initialValues = {\n    phoneNumber: '',\n  };\n  // states\n  const [status, setStatus] = useState(undefined);\n\n  // validate form field\n  // TODO: build other test for phone number\n  const phoneRegExp =\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n  const validationSchema = Yup.object({\n    phoneNumber: Yup.string()\n      // .matches(phoneRegExp, 'Phone number is not valid')\n      .required('Required'),\n  });\n\n  useEffect(() => {\n    socketRef.current = socketIOClient('');\n    socketRef.current.on(NEW_EVENT, message => {\n      setStatus(message);\n    });\n  }, []);\n\n  // submit handler\n  const onSubmitHandler = values => {\n    fetch('/call', {\n      method: 'POST', // or 'PUT'\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(values),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Twilio Outbound Call</h1>\n      <main className=\"main\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmitHandler}\n        >\n          <Form className=\"form\">\n            <label className=\"label\" htmlFor=\"phoneNumber\">\n              Enter Phone Number\n            </label>\n            <Field\n              className=\"input-field\"\n              type=\"text\"\n              id=\"phoneNumber\"\n              name=\"phoneNumber\"\n              placeholder=\"Phone number\"\n            />\n            <button type=\"submit\" className=\"btn\">\n              get started\n            </button>\n          </Form>\n        </Formik>\n        <div className=\"status\">{JSON.stringify(status)}</div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}